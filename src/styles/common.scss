/* common.scss
 *
 * Use this for commonly-named classes etc. Then just @use directly in a
 * component and there's nothing to declare there.
 */

@use "./reset.css";

@mixin dark {
  @media (prefers-color-scheme: dark) {
    @content;
  }
}
@mixin phone-only {
  @media (max-width: 599px) {
    @content;
  }
}
@mixin tablet-portrait-up {
  @media (min-width: 600px) {
    @content;
  }
}
@mixin tablet-landscape-up {
  @media (min-width: 900px) {
    @content;
  }
}
@mixin desktop-up {
  @media (min-width: 1200px) {
    @content;
  }
}
@mixin big-desktop-up {
  @media (min-width: 1800px) {
    @content;
  }
}

/* -------------------------------- Variables ------------------------------- */
:root {
  --content-max-width: 600px;
  --content-padding: 1rem;

  --tiny: 10px;
  --small: 14px;
  --medium: 20px;
  --large: 28px;
  --xlarge: 40px;
}

/* -------------------------------- Elements -------------------------------- */
html {
  color-scheme: light dark;
}

nav {
  ul {
    list-style: none;
    margin: 0;
  }
}

ol {
  list-style-position: inside;
}

p {
  line-height: 1.4;
  + p {
    margin-top: 0.5rem;
  }
}

/* ----------------------------- Utility classes ---------------------------- */
.layout-container {
  max-width: var(--content-max-width);
  margin: 0 auto;
  padding: 0 var(--content-padding);
  box-sizing: border-box;
}

.label-text-container {
  h2 {
    font-size: 1rem;
    line-height: 1.4; // line up with the adjacent <p>
  }

  // Pad the internal text element so we retain the grey divider
  .text {
    padding-bottom: var(--small);
  }

  @include tablet-portrait-up {
    display: grid;
    grid-template-columns: 10ch auto;

    .label {
      padding: 0.5ch 1ch 0.5ch 0;
      justify-self: end;
    }
    .text {
      border-left: 1.5px solid lightgrey;
      line-height: 1.4; // align baselines
      padding: 0.5ch 0 0.5ch 1ch;
    }
  }
}

/* ------------------- Elements styled with a class or ID ------------------- */
// Explain why they're here and not in their component.

// The p here is set:html'd, so doesn't pick up styling from the component.
div.ac-label {
  div.title {
    p + p {
      margin-top: 1ch;
    }
  }
}
