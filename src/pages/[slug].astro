---
import sb from "src/data/smallBusinessFlat";
import type { EntryType } from "src/data/smallBusinessFlat";

import Layout from "@layouts/Layout.astro";
import System from "@components/System.astro";
import Area from "@components/Area.astro";
import Category from "@components/Category.astro";
import ID from "@components/ID.astro";
import OpsManual from "@components/OpsManual.astro";
import HowTo from "@components/HowTo.astro";
import MoreInfo from "@components/MoreInfo.astro";
import AdHoc from "@components/AdHoc.astro";

const { slug } = Astro.params;

// Is it a test run? That's only a possibility if we're in dev, which is how
// we stop sneaky people appending ?env=test in prod and viewing the system.
const testRun =
  import.meta.env.DEV && Astro.url.searchParams.get("env") === "test";

/**
 * This page handles the display of all areas, categories, and IDs. So first
 * we need to figure out which of those things we want. Then we fetch it,
 * then we display it. This is all done with components.
 *
 * If it doesn't exist, show our 04.04.
 *
 * We also need to handle the default case where the user visits /jdex.
 */

/**
 * New way to do this. On each item we've specified what it is. So grab _that_
 * and act appropriately. This handles the does-it-exist check simultaneously.
 * TODO rename this to `system` later
 */

let entryType: EntryType | "no-match" | null = null;
if (!slug) {
  // Not sure how this can be, but handle it
  entryType = "no-match";
} else if (slug === "index.html") {
  entryType = "system";
} else {
  const systemEntry = sb[slug];
  if (!systemEntry) {
    entryType = "no-match";
    // TODO you could display a toast here that the item wasn't found
  } else {
    entryType = systemEntry.type;
  }
}
---

<!-- TODO title needs fixing in case of / etc. -->
<Layout testRun={testRun} title={slug}>
  {entryType === "system" ? <System /> : null}
  {entryType === "area" ? <Area area={slug!} /> : null}
  {entryType === "category" ? <Category category={slug!} /> : null}
  {entryType === "id" ? <ID id={slug!} testRun={testRun} /> : null}
  {entryType === "ops" ? <OpsManual id={slug!} /> : null}
  {entryType === "howTo" ? <HowTo howToId={slug!} /> : null}
  {entryType === "moreInfo" ? <MoreInfo moreInfoId={slug!} /> : null}
  {entryType === "adHoc" ? <AdHoc id={slug!} /> : null}
  {entryType === "no-match" ? <System /> : null}
</Layout>
