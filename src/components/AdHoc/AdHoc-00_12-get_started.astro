---
import Slice from "@components/common/Slice.astro";
import { createClerkClient } from "@clerk/astro/server";

const { userId } = Astro.locals.auth();

const clerkClient = createClerkClient({
  secretKey: import.meta.env.CLERK_SECRET_KEY,
});

const user = userId && (await clerkClient.users.getUser(userId));

let _1_tos, _2_community;
if (user) {
  _1_tos = user.publicMetadata?.onboarding?._1_tos;
  _2_community = user.publicMetadata?.onboarding?._2_community;
}
---

{
  !user ? (
    <Slice className="main-text">
      <div class="layout-grid-left-right">
        <div />
        <div class="layout-right-item">
          <p>Loading your user data...</p>
          <p>
            (If you're not signed in, nothing else is going to happen. When you
            are signed in, this page guides you through the initial setup of
            your system.)
          </p>
        </div>
      </div>
    </Slice>
  ) : (
    <>
      <Slice id="GetStarted-TOS" className="main-text">
        <div class="layout-grid-left-right">
          <h3 class="layout-left-item">Terms of Service</h3>
          <div class="layout-right-item">
            {!_1_tos ? (
              <>
                <p>
                  Before you do anything else, you need to read and agree to the
                  Terms of Service.
                </p>
                <p>
                  They're very short, and written to be read by a human. It'll
                  take two minutes. <a href="/00.31">Go and read them now</a>,
                  then come back here and check this box.
                </p>
              </>
            ) : null}
            <p>
              <input
                type="checkbox"
                id="termsOfService"
                checked={_1_tos}
                disabled={_1_tos}
              />
              <span id="tosText" class={_1_tos ? "tos-agreed" : ""}>
                I agree to the Terms of Service.
              </span>
            </p>
          </div>
        </div>
      </Slice>

      <Slice id="GetStarted-Community" className="main-text">
        <div class="layout-grid-left-right">
          <h3 class="layout-left-item">Community</h3>
          <div class="layout-right-item">
            {!_2_community ? (
              <>
                <p>
                  We've designed this system with the community at its heart.
                  You'll have a nicer time, and be better supported, if you join
                  one or both of the forum, and Discord.
                </p>
                <p>
                  The forum is simpler and slower. Whereas Discord is more of an
                  always-on chat channel. If you're unsure, start with the
                  forum.
                </p>
                <p>
                  At the bottom of every page there are links to these
                  communities. These links take you to a specific channel where
                  you can get targeted help.
                </p>
                <p>
                  There's also a private feedback form if you want to send us a
                  message directly.
                </p>
                <p>
                  Head over to <a href="/00.13">00.13 Forum & Discord links</a>{" "}
                  and sign yourself up. Send us a little welcome message, then
                  come back here and check the box.
                </p>
              </>
            ) : null}
            <p>
              <input
                type="checkbox"
                id="community"
                checked={_2_community}
                disabled={_2_community}
              />
              <span
                id="communityText"
                class={_2_community ? "community-agreed" : ""}
              >
                I'm in!
              </span>
            </p>
          </div>
        </div>
      </Slice>
    </>
  )
}

<script>
  import { actions } from "astro:actions";

  document.addEventListener("DOMContentLoaded", async () => {
    // #region TOS
    const termsOfServiceCheckbox = document.getElementById(
      "termsOfService"
    ) as HTMLInputElement;
    const tosText = document.getElementById("tosText");

    if (!termsOfServiceCheckbox)
      throw new Error("ðŸš¨ termsOfServiceCheckbox doesn't exist!");
    if (!tosText) throw new Error("ðŸš¨ tosText element doesn't exist!");

    termsOfServiceCheckbox.addEventListener("change", async () => {
      if (termsOfServiceCheckbox.checked) {
        // Apply strikethrough and disable checkbox
        tosText.classList.add("tos-agreed");
        termsOfServiceCheckbox.disabled = true;

        // Update metadata
        // TODO handle errors throughout this file
        const { data, error } = await actions.setPublicMetadata({
          key: "onboarding._1_tos",
          value: new Date().toISOString(),
        });
      }
    });
    // #endregion

    // #region Community
    const communityCheckbox = document.getElementById(
      "community"
    ) as HTMLInputElement;
    const communityText = document.getElementById("communityText");

    if (!communityCheckbox)
      throw new Error("ðŸš¨ communityCheckbox doesn't exist!");
    if (!communityText)
      throw new Error("ðŸš¨ communityText element doesn't exist!");

    communityCheckbox.addEventListener("change", async () => {
      if (communityCheckbox.checked) {
        communityText.classList.add("community-agreed");
        communityCheckbox.disabled = true;

        // Update metadata
        const { data, error } = await actions.setPublicMetadata({
          key: "onboarding._2_community",
          value: new Date().toISOString(),
        });
      }
    });
    // #endregion
  });
</script>

<style lang="scss">
  @use "@styles/common" as *;

  .tos-agreed {
    text-decoration: line-through;
  }

  .community-agreed {
    text-decoration: line-through;
  }
</style>
