---
/**
 * The FurtherReading view component. Note that they can be attached to AC.IDs.
 * So that complicates things a bit.
 */

// #region Props --------------------------------------------------------------
interface Props {
  furtherReadingId: string;
}
const { furtherReadingId } = Astro.props;
// #endregion

// #region Clerk user
const { userId } = Astro.locals.auth();
// #endregion

// #region Imports ------------------------------------------------------------
// Data
import system, { type FurtherReadingEntry } from "@data/smallBusinessFlat";
// Utils
import parseMd from "@utils/parseMd";
// Components
import Slice from "@components/common/Slice.astro";
import SystemBreadcrumb from "@components/common/SystemBreadcrumb.astro";
import CategoryBreadcrumb from "@components/common/CategoryBreadcrumb.astro";
import AreaBreadcrumb from "@components/common/AreaBreadcrumb.astro";
import IdBreadcrumb from "@components/common/IdBreadcrumb.astro";
// #endregion

const frEntry = system[furtherReadingId] as FurtherReadingEntry;
const isPublic = frEntry.isPublic || false;
const furtherReadingIdForDisplay = frEntry.number.replace(/(.*)(\+.*)/, "$2");

let furtherReadingTitle: string;
let furtherReadingEntryText: string;
if (userId) {
  furtherReadingTitle = frEntry.title;
  furtherReadingEntryText = await parseMd(
    frEntry.extensions?.furtherReading.text
  );
} else {
  furtherReadingTitle = await parseMd(frEntry.title, false, isPublic);
  furtherReadingEntryText = await parseMd(
    frEntry.extensions?.furtherReading.text,
    true,
    isPublic
  );
}
// TODO Build something that pulls out the H1s from this text and puts them
// in the left side as a header. .map(etc...)

let parentEntryType: "id" | "category" | "area" | "system";
if (frEntry.number.match(/^\d\d\.\d\d\+/)) {
  parentEntryType = "id";
} else if (frEntry.number.match(/^\d\d\+/)) {
  parentEntryType = "category";
} else if (frEntry.number.match(/^\d\d-\d\d\+/)) {
  parentEntryType = "area";
} else if (frEntry.number.match(/^J82\+/)) {
  parentEntryType = "system";
} else {
  // Don't think it's possible to get this far in the render chain but
  throw new Error(`Unknown further reading ID: ${furtherReadingId}`);
}
---

<SystemBreadcrumb />

{
  parentEntryType === "area" ||
  parentEntryType === "category" ||
  parentEntryType === "id" ? (
    <AreaBreadcrumb thisEntry={frEntry} />
  ) : null
}

{
  parentEntryType === "category" || parentEntryType === "id" ? (
    <CategoryBreadcrumb thisEntry={frEntry} />
  ) : null
}

{parentEntryType === "id" ? <IdBreadcrumb thisEntry={frEntry} /> : null}

<Slice id="Header" className="active-top">
  <div class="layout-grid-left-right phone-only">
    <h1 class="layout-left-item">
      {furtherReadingIdForDisplay}
      {furtherReadingTitle}
    </h1>
  </div>
  <div class="layout-grid-left-right tablet-portrait-up">
    <h1 class="layout-left-item">{furtherReadingIdForDisplay}</h1>
    <h1 class="layout-right-item">{furtherReadingTitle}</h1>
  </div>
</Slice>

<Slice id="FurtherReadingEntryText" className="main-text">
  <div class="layout-grid-left-right">
    <div></div>
    <div class="layout-right-item" set:html={furtherReadingEntryText} />
  </div>
</Slice>

<!-- TODO: add Ops manuals in this ID :-) -->

<div id="EndOfIDsBorder"></div>

<style lang="scss">
  @use "@styles/common" as *;

  #EndOfIDsBorder {
    border-top: 1px solid var(--border-strong);
  }
</style>
