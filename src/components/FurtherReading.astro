---
/**
 * The FurtherReading view component. Note that they can be attached to AC.IDs.
 * So that complicates things a bit.
 */

// #region Props --------------------------------------------------------------
interface Props {
  furtherReadingId: string;
}
const { furtherReadingId } = Astro.props;
// #endregion

// #region Clerk user
const { userId } = Astro.locals.auth();
// #endregion

// #region Imports ------------------------------------------------------------
// Data
import system, {
  type SystemEntry,
  type AreaEntry,
  type CategoryEntry,
  type IdEntry,
  type FurtherReadingEntry,
} from "@data/smallBusinessFlat";
// Utils
import parseMd from "@utils/parseMd";
// Components
import Slice from "./common/Slice.astro";
// #endregion

// #region Entry: core details ------------------------------------------------
const frEntry = system[furtherReadingId] as FurtherReadingEntry;
const isPublic = frEntry.isPublic || false;

let parentEntryType: "id" | "category" | "area" | "system";
let parentEntryNumber: string;
if (frEntry.number.match(/^\d\d\.\d\d\+/)) {
  parentEntryType = "id";
  parentEntryNumber = frEntry.number.replace(/^(\d\d\.\d\d).*/, "$1");
} else if (frEntry.number.match(/^\d\d\+/)) {
  parentEntryType = "category";
  parentEntryNumber = frEntry.number.replace(/^(\d\d).*/, "$1");
} else if (frEntry.number.match(/^\d\d-\d\d\+/)) {
  parentEntryType = "area";
  parentEntryNumber = frEntry.number.replace(/^(\d\d-\d\d).*/, "$1");
} else if (frEntry.number === "J82") {
  parentEntryType = "system";
  parentEntryNumber = "J82";
} else {
  throw new Error(`Unknown further reading ID: ${furtherReadingId}`);
}

const furtherReadingIdForDisplay = frEntry.number.replace(/(.*)(\+.*)/, "$2");

let furtherReadingTitle: string;
let furtherReadingEntryText: string;
if (userId) {
  furtherReadingTitle = frEntry.title;
  furtherReadingEntryText = await parseMd(
    frEntry.extensions?.furtherReading.text
  );
} else {
  furtherReadingTitle = await parseMd(frEntry.title, false, isPublic);
  furtherReadingEntryText = await parseMd(
    frEntry.extensions?.furtherReading.text,
    true,
    isPublic
  );
}
// TODO Build something that pulls out the H1s from this text and puts them
// in the left side as a header. .map(etc...)

/**
 * Working out the breadcrumbs.
 *
 * If this entry's parent is an ID, we need them all.
 */

let parentIdNumber,
  parentIdEntry,
  parentIdTitle,
  parentCNumber,
  parentCEntry,
  parentCTitle,
  firstDigit,
  parentANumber,
  parentAEntry,
  parentATitle,
  parentSNumber,
  parentSEntry,
  parentSTitle = null;
if (parentEntryType === "id") {
  parentIdNumber = parentEntryNumber;
  parentIdEntry = system[parentIdNumber] as IdEntry;
  parentIdTitle = parentIdEntry.title;
  // Category
  parentCNumber = parentIdEntry.number.split(".")[0];
  parentCEntry = system[parentCNumber] as CategoryEntry;
  parentCTitle = parentCEntry.title;
  // Area
  firstDigit = parentCEntry.number.charAt(0);
  parentANumber = `${firstDigit}0-${firstDigit}9`;
  parentAEntry = system[parentANumber] as AreaEntry;
  parentATitle = parentAEntry.title;
  // System
  parentSNumber = "J82";
  parentSEntry = system[parentSNumber] as SystemEntry;
  parentSTitle = parentSEntry.title;
} else if (parentEntryType === "category") {
  parentCNumber = parentEntryNumber;
  parentCEntry = system[parentCNumber] as CategoryEntry;
  parentCTitle = parentCEntry.title;
  // Area
  firstDigit = parentCNumber.charAt(0);
  parentANumber = `${firstDigit}0-${firstDigit}9`;
  parentAEntry = system[parentANumber] as AreaEntry;
  parentATitle = parentAEntry.title;
  // System
  parentSNumber = "J82";
  parentSEntry = system[parentSNumber] as SystemEntry;
  parentSTitle = parentSEntry.title;
} else if (parentEntryType === "area") {
  parentANumber = parentEntryNumber;
  parentAEntry = system[parentANumber] as AreaEntry;
  parentATitle = parentAEntry.title;
  // System
  parentSNumber = "J82";
  parentSEntry = system[parentSNumber] as SystemEntry;
  parentSTitle = parentSEntry.title;
} else if (parentEntryType === "system") {
  parentSNumber = parentEntryNumber;
  parentSEntry = system[parentSNumber] as SystemEntry;
  parentSTitle = parentSEntry.title;
} else {
  throw new Error(`Unknown parent entry type: ${parentEntryType}`);
}
---

<Slice id="SystemBreadcrumb" className="secondary-content-bg">
  <div class="layout-grid-left-right">
    <div></div>
    <h3 class="layout-right-item"><a href="/">{parentSTitle}</a></h3>
  </div>
</Slice>

{
  parentEntryType === "area" ||
  parentEntryType === "category" ||
  parentEntryType === "id" ? (
    <Slice id="AreaBreadcrumb" className="secondary-content-bg">
      <div class="layout-grid-left-right">
        <h3 class="layout-left-item">
          <a href={parentANumber}>{parentANumber}</a>
        </h3>
        <h3 class="layout-right-item">
          <a href={parentANumber}>{parentATitle}</a>
        </h3>
      </div>
    </Slice>
  ) : null
}

{
  parentEntryType === "category" || parentEntryType === "id" ? (
    <Slice id="CategoryBreadcrumb" className="secondary-content-bg">
      <div class="layout-grid-left-right">
        <h3 class="layout-left-item">
          <a href={parentCNumber}>{parentCNumber}</a>
        </h3>
        <h3 class="layout-right-item">
          <a href={parentCNumber}>{parentCTitle}</a>
        </h3>
      </div>
    </Slice>
  ) : null
}

{
  parentEntryType === "id" ? (
    <Slice id="IdBreadcrumb" className="secondary-content-bg">
      <div class="layout-grid-left-right">
        <h3 class="layout-left-item">
          <a href={parentIdNumber}>{parentIdNumber}</a>
        </h3>
        <h3 class="layout-right-item">
          <a href={parentIdNumber}>{parentIdTitle}</a>
        </h3>
      </div>
    </Slice>
  ) : null
}

<Slice id="Header" className="active-top">
  <div class="layout-grid-left-right phone-only">
    <h1 class="layout-left-item">
      {furtherReadingIdForDisplay}
      {furtherReadingTitle}
    </h1>
  </div>
  <div class="layout-grid-left-right tablet-portrait-up">
    <h1 class="layout-left-item">{furtherReadingIdForDisplay}</h1>
    <h1 class="layout-right-item">{furtherReadingTitle}</h1>
  </div>
</Slice>

<Slice id="FurtherReadingEntryText" className="descriptive-text">
  <div class="layout-grid-left-right">
    <div></div>
    <div class="layout-right-item" set:html={furtherReadingEntryText} />
  </div>
</Slice>

<!-- TODO: add Ops manuals in this ID :-) -->

<div id="EndOfIDsBorder"></div>

<style lang="scss">
  @use "@styles/common" as *;

  #EndOfIDsBorder {
    border-top: 1px solid var(--border-strong);
  }
</style>
