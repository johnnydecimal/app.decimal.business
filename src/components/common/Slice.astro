---
interface Props {
  className?: string;
  id?: string;
}

const { className, id } = Astro.props;
---

<div id={id} class=`Slice ${className}`>
  <div class="inner-container">
    <slot />
  </div>
</div>

<style lang="scss">
  // This works with local scoping because each `className` is sent to this
  // component, and rendered directly by it.
  .Slice {
    // Thicken the border below search
    &.search-border {
      border-bottom: 2px solid var(--border-strong);
    }

    // Active vs. inactive highlighting
    // .active-top/-bottom do the border
    &.active-top {
      border-top: 1px solid var(--border-strong);
    }
    &.active-bottom {
      border-bottom: 1px solid var(--border-strong);
    }
    // .secondary-content-bg does the not-active bg tint
    &.secondary-content-bg {
      background-color: var(--secondary-content-bg);
    }
    &.tertiary-content-bg {
      background-color: var(--tertiary-content-bg);
    }

    // The inner container is what brings us in from the edges, with padding
    // Everything absolutely everything should live in here
    .inner-container {
      max-width: var(--content-max-width);
      margin: 0 auto;
      padding: 0 var(--content-padding);
      box-sizing: border-box;
    }
  }
</style>
