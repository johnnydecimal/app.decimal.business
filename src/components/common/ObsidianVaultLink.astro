---
interface Props {
  id: string;
  idTitle: string;
}
const { id, idTitle } = Astro.props;

import { createClerkClient } from "@clerk/astro/server";
import Slice from "./Slice.astro";

const { userId } = Astro.locals.auth();
const obsidianPathURI = encodeURIComponent(`${id} ${idTitle}`);

// Get the user's stored Obsidian vault name
let obsidianVaultURI: string | null = null;
// If there's a user...
if (userId) {
  const clerkClient = createClerkClient({
    secretKey: import.meta.env.CLERK_SECRET_KEY,
  });
  const user = await clerkClient.users.getUser(userId!);
  // ...and they have a stored Obsidian vault name...
  if (user.publicMetadata.obsidianVault) {
    // ...then use it
    obsidianVaultURI = encodeURIComponent(user.publicMetadata.obsidianVault);
  } else {
    // Otherwise, don't show the link
    obsidianVaultURI = null;
  }
}
---

{
  obsidianVaultURI ? (
    <Slice id="ObsidianVaultLink" className="main-text">
      <div class="layout-grid-left-right">
        <h3 class="layout-left-item">Open in Obsidian</h3>
        <div class="layout-right-item">
          <p>
            <a
              href={`obsidian://open?vault=${obsidianVaultURI}&file=${obsidianPathURI}`}
            >
              {id}&nbsp;{idTitle}
            </a>
          </p>
        </div>
      </div>
    </Slice>
  ) : (
    <Slice id="ObsidianVaultLink" className="main-text">
      <div class="layout-grid-left-right">
        <h3 class="layout-left-item">Open in Obsidian</h3>
        <div class="layout-right-item">
          <p>
            <a
              href="#"
              onclick="alert(`When you're signed in, this link opens this entry in your chosen JDex app. We currently support Bear and Obsidian.`)"
            >
              {id}&nbsp;{idTitle}
            </a>
          </p>
        </div>
      </div>
    </Slice>
  )
}

<style lang="scss">
  @use "@styles/common" as *;
</style>
