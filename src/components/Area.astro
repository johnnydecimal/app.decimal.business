---
/**
 * The area list view component. So we've navigated to
 * /jdex/10-19.
 *
 * Shows the area and all of its categories. Might it be nice to show
 * the header-IDs as well?
 *
 * ```
 * ðŸ•š 10-19 The teens                                        [emoji, big?]
 *      The description of area ten through nineteen.
 *
 * ## 11 The business & its people
 *       Description
 *       11.10 Documents
 *       11.20 Registraions
 *
 * ## 12 Where we trade...
 *          Description
 * ## 13 ...
 *
 * ```
 *
 * So we need:
 * - To be passed the number of the area to render. This is the slug.
 * - The whole system to reference. Just import it directly.
 * - The title of the area for the main header.
 * - The description and emoji of the area.
 * - An array of the categories that this area contains. Each one of those
 *   needs to contain the ID, title, description, emoji.
 * - Where those descriptions have been rendered to HTML from Markdown.
 * - Linking the category header to the category URL.
 * - A breadcrumb to the parent area.
 */

// - To be passed the number of the category to render. This is the slug.
interface Props {
  category: string;
}
const { category } = Astro.props;

// - The whole system to reference. Just import it directly.
import sb from "src/data/smallBusinessFlat";

// - The title of the category for the main header.
const cTitle = sb[category]?.title;

// - The description and emoji of the category.
const cDescription = sb[category].description;
const cEmoji = sb[category].emoji;

// - An array of the IDs that this category contains. Each one of those
//   needs to contain the ID, title, description, isHeader, emoji.
import { getChildren } from "src/data/smallBusinessFlat";
import type { IdEntry } from "src/data/smallBusinessFlat";
const ids = getChildren(sb, "11") as IdEntry[];
console.log("=====");
console.log(ids);

// - Where those descriptions have been rendered to HTML from Markdown.
import { marked } from "marked";
import { markedSmartypants } from "marked-smartypants";
marked.use(markedSmartypants());

// - Wiki-linkify the description
import wikiLinkify from "@helpers/wikiLinkify";
---

<h1 id="number-title">
  <span class="number">{category}</span>
  <span class="title">{cTitle}</span>
  <span class="emoji">{cEmoji}</span>
</h1>

<div class="description"><p>{cDescription}</p></div>

<ul>
  {
    ids.map((id) => (
      <li class={id.isHeader ? "is-header" : null}>
        <h2>
          {/* - Linking the ID header to the ID URL. */}
          <a href={`/jdex/${id.number}`}>{`${id.number} ${id.title}`}</a>
        </h2>
        <div
          class="description"
          set:html={id.description && marked.parse(wikiLinkify(id.description))}
        />
      </li>
    ))
  }
</ul>

<style lang="scss">
  @use "@styles/common.scss";
  @use "@styles/responsive.scss" as r;

  h1#number-title {
    display: grid;
    grid-template-columns: auto 1fr auto;
    grid-template-areas: "number title emoji";
    gap: 1ch;
    @include r.mobile {
      grid-template-areas:
        "number emoji"
        "title  title";
    }

    .number,
    .emoji {
      font-size: 4rem;
      line-height: 1;
      @include r.mobile {
        justify-self: end;
      }
    }
    .number {
      grid-area: number;
    }
    .title {
      grid-area: title;
    }
    .emoji {
      grid-area: emoji;
      padding-top: 5px;
    }
  }

  h2 {
    font-size: 1rem;
    font-weight: 600;
    a {
      text-decoration: none;
    }
  }

  ul {
    list-style-type: none;
    padding: 0;
    li.is-header {
      border-top: 1px solid darkblue;
      margin-top: 30px;
    }
  }
</style>
