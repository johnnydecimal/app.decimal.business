---
/**
 * The area list view component. So we've navigated to /10-19.
 */

interface Props {
  area: string;
}
const { area } = Astro.props;

import system, {
  type SystemEntry,
  type AreaEntry,
} from "@data/smallBusinessFlat";
import parseMd from "@utils/parseMd";
import Slice from "./common/Slice.astro";
import SystemBreadcrumb from "./common/SystemBreadcrumb.astro";
import ChildrenInParent from "./common/ChildrenInParent.astro";
import FurtherReadingLinks from "./common/FurtherReadingLinks.astro";

const areaEntry = system[area] as AreaEntry;
const areaTitle = areaEntry.title;
const areaDescription = await parseMd(areaEntry.description);
const sb = areaEntry.extensions?.smallBusiness;
const areaExamples = sb?.examples && (await parseMd(sb.examples));
const areaOverview = sb?.overview && (await parseMd(sb.overview));
const areaExceptions = sb?.exceptions && (await parseMd(sb.exceptions));
const areaAlsoSee = sb?.alsoSee && (await parseMd(sb.alsoSee));

const parentSNumber = "J82";
const parentSEntry = system[parentSNumber] as SystemEntry;
const parentSTitle = parentSEntry.title;
---

<SystemBreadcrumb parentSTitle={parentSTitle} />

<Slice id="Header" className="active-top">
  <div class="layout-grid-left-right phone-only">
    <h1 class="layout-left-item">{area} {areaTitle}</h1>
  </div>
  <div class="layout-grid-left-right tablet-portrait-up">
    <h1 class="layout-left-item">{area}</h1>
    <h1 class="layout-right-item">{areaTitle}</h1>
  </div>
</Slice>

<!-- #region Optional fields -------------------------------------------------->
{
  areaDescription ? (
    <Slice id="AreaDescription" className="main-text">
      <div class="layout-grid-left-right">
        <div />
        <div class="layout-right-item" set:html={areaDescription} />
      </div>
    </Slice>
  ) : null
}

{
  areaExamples ? (
    <Slice id="AreaExamples" className="main-text">
      <div class="layout-grid-left-right">
        <h3 class="layout-left-item">Examples</h3>
        <div class="layout-right-item" set:html={areaExamples} />
      </div>
    </Slice>
  ) : null
}

{
  areaOverview ? (
    <Slice id="AreaMoreInfo" className="main-text">
      <div class="layout-grid-left-right">
        <h3 class="layout-left-item">More info</h3>
        <div class="layout-right-item" set:html={areaOverview} />
      </div>
    </Slice>
  ) : null
}

{
  areaExceptions ? (
    <Slice id="AreaExceptions" className="main-text">
      <div class="layout-grid-left-right">
        <h3 class="layout-left-item">Exceptions</h3>
        <div class="layout-right-item" set:html={areaExceptions} />
      </div>
    </Slice>
  ) : null
}

{
  areaAlsoSee ? (
    <Slice id="AreaAlsoSee" className="main-text">
      <div class="layout-grid-left-right">
        <h3 class="layout-left-item">Also see</h3>
        <div class="layout-right-item" set:html={areaAlsoSee} />
      </div>
    </Slice>
  ) : null
}
<!-- #endregion -------------------------------------------------------------->

<FurtherReadingLinks number={area} />

<ChildrenInParent number={area} />

<style lang="scss">
  @use "@styles/common" as *;
</style>
