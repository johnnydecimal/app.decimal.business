---
/**
 * The category list view component. So we've navigated to
 * /jdex/11.
 *
 * Shows the category and all of its IDs, grouped by header.
 *
 * ```
 * üïö 11 Eleven                                          [emoji, big?]
 *      The description of category eleven.
 *
 * ## 11.10 Official documents üóÇ Ô∏è
 *          Description
 *    11.11 Structure & registrations
 *          Description
 *    11.12 ...
 *
 * ## 11.20 Planning, contingencies, & insurance üß≠
 *          Description
 *    11.21 ...
 * ```
 *
 * So we need:
 * ‚àö To be passed the number of the category to render. This is the slug.
 * ‚àö The whole system to reference. Just import it directly.
 * ‚àö The title of the category for the main header.
 * ‚àö The description and emoji of the category.
 * ‚àö An array of the IDs that this category contains. Each one of those
 *   needs to contain the ID, title, description, isHeader, emoji.
 * ‚àö Where those descriptions have been rendered to HTML from Markdown.
 * ‚àö Linking the ID header to the ID URL.
 * - Denoting with styles and a ‚ñ† whether it's a header.
 */

// - To be passed the number of the category to render. This is the slug.
interface Props {
  category: string;
}
const { category } = Astro.props;

// - The whole system to reference. Just import it directly.
import sb from "@content/data/smallBusinessFlat";

// - The title of the category for the main header.
const cTitle = sb[category]?.title;

// - The description and emoji of the category.
const cDescription = sb[category].description;
const cEmoji = sb[category].emoji;

// - An array of the IDs that this category contains. Each one of those
//   needs to contain the ID, title, description, isHeader, emoji.
import { getChildren } from "@content/data/smallBusinessFlat.ts";
const ids = getChildren(sb, "11");
console.log(ids);

// - Where those descriptions have been rendered to HTML from Markdown.
import { marked } from "marked";
import { markedSmartypants } from "marked-smartypants";
marked.use(markedSmartypants());
---

<h1 id="number-title">
  <span class="number">{category}</span>
  <span class="title">{cTitle}</span>
  <span class="emoji">{cEmoji}</span>
</h1>

<div class="description">{cDescription}</div>

<ul>
  {
    ids.map((id) => (
      <li>
        <h2>
          {/* - Linking the ID header to the ID URL. */}
          <a href={`/jdex/${id.number}`}>{`${id.number} ${id.title}`}</a>
        </h2>
        <div
          class="description"
          set:html={id.description && marked.parse(id.description)}
        />
      </li>
    ))
  }
</ul>

<style lang="scss">
  @use "@styles/responsive.scss" as r;

  h1#number-title {
    display: grid;
    grid-template-columns: auto 1fr auto;
    grid-template-areas: "number title emoji";
    gap: 1ch;
    @include r.mobile {
      grid-template-areas:
        "number emoji"
        "title  title";
    }

    .number,
    .emoji {
      font-size: 4rem;
      line-height: 1;
      @include r.mobile {
        justify-self: end;
      }
    }
    .number {
      grid-area: number;
    }
    .title {
      grid-area: title;
    }
    .emoji {
      grid-area: emoji;
      padding-top: 5px;
    }
  }

  h2 {
    font-size: 1rem;
    font-weight: 600;
    a {
      text-decoration: none;
    }
  }

  ul {
    list-style-type: none;
    padding: 0;
  }
</style>
