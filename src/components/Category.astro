---
/**
 * The category list view component. So we've navigated to /11.
 */

interface Props {
  category: string;
  testRun?: boolean;
}
const { category } = Astro.props;

import system, {
  getChildren,
  type SystemEntry,
  type AreaEntry,
  type CategoryEntry,
  type IdEntry,
} from "@data/smallBusinessFlat";
import { parseMdWikiLink } from "@utils/parseMdWikiLink";
import Slice from "./common/Slice.astro";

// Get this entry's details
const categoryEntry = system[category] as CategoryEntry;
const categoryTitle = categoryEntry.title;

// All of its other details for the main content.
const categoryDescription = await parseMdWikiLink(categoryEntry.description);
const categoryEntrySb = categoryEntry.extensions?.smallBusiness;
const categoryExamples = await parseMdWikiLink(categoryEntrySb?.examples);
const categoryMoreInfo = await parseMdWikiLink(categoryEntrySb?.moreInfo);
const categoryExceptions = await parseMdWikiLink(categoryEntrySb?.exceptions);
const categoryAlsoSee = await parseMdWikiLink(categoryEntrySb?.alsoSee);
const categoryRationale = await parseMdWikiLink(categoryEntrySb?.rationale);

// Get all of the IDs that this category contains
const ids = getChildren(system, category) as IdEntry[];

// Breadcrumbs to parent items
const parentANumber = categoryEntry.parentNumber;
const parentAEntry = system[parentANumber] as AreaEntry;
const parentATitle = parentAEntry.title;
const parentSNumber = parentAEntry.parentNumber;
const parentSEntry = system[parentSNumber] as SystemEntry;
const parentSTitle = parentSEntry.title;
---

<Slice id="SystemBreadcrumb" className="secondary-content-bg">
  <div class="layout-grid-left-right">
    <div></div>
    <h3 class="layout-right-item"><a href="/">{parentSTitle}</a></h3>
  </div>
</Slice>

<Slice id="AreaBreadcrumb" className="secondary-content-bg">
  <div class="layout-grid-left-right">
    <h3 class="layout-left-item">
      <a href={parentANumber}>{parentANumber}</a>
    </h3>
    <h3 class="layout-right-item">
      <a href={parentANumber}>{parentATitle}</a>
    </h3>
  </div>
</Slice>

<Slice id="Header" className="active-top">
  <div class="layout-grid-left-right phone-only">
    <h1 class="layout-left-item">{category} {categoryTitle}</h1>
  </div>
  <div class="layout-grid-left-right tablet-portrait-up">
    <h1 class="layout-left-item">{category}</h1>
    <h1 class="layout-right-item">{categoryTitle}</h1>
  </div>
</Slice>

{
  categoryDescription ? (
    <Slice id="CategoryDescription" className="descriptive-text">
      <div class="layout-grid-left-right">
        <div />
        <div class="layout-right-item" set:html={categoryDescription} />
      </div>
    </Slice>
  ) : null
}

{
  categoryExamples ? (
    <Slice id="CategoryExamples" className="descriptive-text">
      <div class="layout-grid-left-right">
        <h3 class="layout-left-item">Examples</h3>
        <div class="layout-right-item" set:html={categoryExamples} />
      </div>
    </Slice>
  ) : null
}

{
  categoryMoreInfo ? (
    <Slice id="CategoryMoreInfo" className="descriptive-text">
      <div class="layout-grid-left-right">
        <h3 class="layout-left-item">More info</h3>
        <div class="layout-right-item" set:html={categoryMoreInfo} />
      </div>
    </Slice>
  ) : null
}

{
  categoryExceptions ? (
    <Slice id="CategoryExceptions" className="descriptive-text">
      <div class="layout-grid-left-right">
        <h3 class="layout-left-item">Exceptions</h3>
        <div class="layout-right-item" set:html={categoryExceptions} />
      </div>
    </Slice>
  ) : null
}

{
  categoryAlsoSee ? (
    <Slice id="CategoryAlsoSee" className="descriptive-text">
      <div class="layout-grid-left-right">
        <h3 class="layout-left-item">Also see</h3>
        <div class="layout-right-item" set:html={categoryAlsoSee} />
      </div>
    </Slice>
  ) : null
}

{
  categoryRationale ? (
    <Slice id="CategoryRationale" className="descriptive-text">
      <div class="layout-grid-left-right">
        <h3 class="layout-left-item">Rationale</h3>
        <div class="layout-right-item" set:html={categoryRationale} />
      </div>
    </Slice>
  ) : null
}

<Slice id="ChildrenInParentLabel" className="secondary-content-bg">
  <div class="layout-grid-left-right">
    <div></div>
    <h2 class="layout-right-item">IDs in this category</h2>
  </div>
</Slice>

<Slice id="ChildrenInParentList" className="secondary-content-bg">
  <ol class="acid-list">
    {
      ids.map(async (id) => {
        // If id isn't a pure JD ID, e.g. it might be +OPS, ignore
        if (!id.number.match(/^\d\d\.\d\d$/)) {
          return;
        }
        const idDescription = await parseMdWikiLink(id.description);
        return (
          <li class="layout-grid-left-right">
            <h3 class="layout-left-item">
              <a href={`/${id.number}`}>{id.number}</a>
            </h3>
            <div class="layout-right-item">
              <h3>
                <a href={`/${id.number}`}>{id.title}</a>
              </h3>
              <div set:html={idDescription} />
            </div>
          </li>
        );
      })
    }
  </ol>
</Slice>

<style lang="scss">
  @use "@styles/common" as *;
</style>
